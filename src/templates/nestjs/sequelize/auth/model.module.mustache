import { Module } from '@nestjs/common';
import { JwtModule } from '@nestjs/jwt';
import { PassportModule } from '@nestjs/passport';
import { ConfigModule, ConfigService } from '@nestjs/config';
import { JwtStrategy } from './strategies/jwt.strategy';
import { LocalStrategy } from './strategies/local.strategy';
import { AuthController } from './auth.controller'
import { AuthService } from './auth.service'
@Module({
  imports: [
    PassportModule.register({
        defaultStrategy:'jwt'
    }),
    JwtModule.registerAsync({
      imports: [ConfigModule],
      inject: [ConfigService],
      useFactory: (config:ConfigService) =>({
          secret:config.get<string>('JWT_SECRET'),
          signOptions:{expiresIn:'1h'}
      }),
    }),
],
  controllers: [
    AuthController,
  ],
  providers: [AuthService,LocalStrategy, JwtStrategy],
})
export class AuthModule {}